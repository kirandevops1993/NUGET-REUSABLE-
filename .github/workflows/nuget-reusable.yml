name: Reusable Dotnet Workflow

on:
  workflow_call:
    inputs:
      command:
        required: true
        type: string
      projects:
        required: true
        type: string
      arguments:
        required: false
        type: string
      nugetConfigPath:
        required: true
        type: string
      packagesToPack:
        required: true
        type: string
      configuration:
        required: true
        type: string
      custom:
        required: true
        type: boolean
      restoreArguments:
        required: true
        type: string
      testRunTitle:
        required: false
        type: string
      modifyOutputPath:
        required: true
        type: boolean
      packDirectory:
        required: true
        type: string
      nobuild:
        required: true
        type: boolean
      includesymbols:
        required: true
        type: boolean
      includesource:
        required: true
        type: boolean
      requestTimeout:
        required: false
        type: string
      noCache:
        required: true
        type: boolean
      restoreDirectory:
        required: true
        type: string
      verbosityRestore:
        required: true
        type: string
      sensitiveAlphanumericInfo1:
        required: true
        type: string
      versioningScheme:
        required: false
        type: string
      versionEnvVar:
        required: true
        type: string
      majorVersion:
        required: true
        type: string
      minorVersion:
        required: true
        type: string
      patchVersion:
        required: true
        type: string
      buildProperties:
        required: true
        type: string
      verbosityPack:
        required: true
        type: string
      workingDirectory:
        required: true
        type: string

jobs:
  dotnet:
    runs-on: windows-latest
    defaults:
      run:
        working-directory: ${{ inputs.workingDirectory }}
    env:
      VERSION: ${{ inputs.majorVersion }}.${{ inputs.minorVersion }}.${{ inputs.patchVersion }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.201'

      - name: Set version env var (optional)
        shell: bash
        run: |
          echo "${{ inputs.versionEnvVar }}=$VERSION" >> $GITHUB_ENV

      - name: Dotnet restore
        if: ${{ inputs.command == 'restore' }}
        shell: bash
        run: |
          dotnet restore ${{ inputs.projects }} \
            --configfile ${{ inputs.nugetConfigPath }} \
            ${{ inputs.restoreArguments }} \
            --no-cache="${{ inputs.noCache }}" \
            --packages ${{ inputs.restoreDirectory }} \
            --verbosity ${{ inputs.verbosityRestore }}

      - name: Dotnet build
        if: ${{ inputs.command == 'build' }}
        shell: bash
        run: |
          dotnet build ${{ inputs.projects }} ${{ inputs.arguments }}

      - name: Dotnet test
        if: ${{ inputs.command == 'test' }}
        shell: bash
        run: |
          dotnet test ${{ inputs.projects }} ${{ inputs.arguments }} \
            --logger "trx;LogFileName=${{ inputs.testRunTitle }}.trx"

      - name: Dotnet pack
        if: ${{ inputs.command == 'pack' }}
        shell: bash
        run: |
          dotnet pack ${{ inputs.packagesToPack }} \
            --configuration ${{ inputs.configuration }} \
            --output ${{ inputs.packDirectory }} \
            --no-build="${{ inputs.nobuild }}" \
            --include-symbols="${{ inputs.includesymbols }}" \
            --include-source="${{ inputs.includesource }}" \
            --property "Version=$VERSION;SensitiveAlphanumericInfo3=${{ inputs.sensitiveAlphanumericInfo1 }};${{ inputs.buildProperties }}" \
            --verbosity ${{ inputs.verbosityPack }}
yaml
Copy
Edit
# .github/workflows/main.yml
name: Main Workflow

on:
  push:
    branches:
      - main

jobs:
  restore:
    uses: kirandevops1993/NUGET-REUSABLE-/.github/workflows/nuget-reusable.yml@main
    with:
      command: restore
      projects: '**/*.csproj'
      nugetConfigPath: 'NuGet.config'
      arguments: ''
      packagesToPack: ''
      configuration: 'Release'
      custom: true
      restoreArguments: '--interactive'
      testRunTitle: ''
      modifyOutputPath: true
      packDirectory: './custom_pack'
      nobuild: true
      includesymbols: true
      includesource: true
      requestTimeout: '180'
      noCache: true
      restoreDirectory: './restoredir'
      verbosityRestore: 'minimal'
      sensitiveAlphanumericInfo1: 'true'
      versioningScheme: '1.0.0'
      versionEnvVar: 'BUILD_VERSION'
      majorVersion: '1'
      minorVersion: '0'
      patchVersion: '3'
      buildProperties: 'CommitId=abc123'
      verbosityPack: 'detailed'
      workingDirectory: './src'

  build:
    needs: restore
    uses: kirandevops1993/NUGET-REUSABLE-/.github/workflows/nuget-reusable.yml@main
    with:
      command: build
      projects: '**/*.csproj'
      nugetConfigPath: 'NuGet.config'
      arguments: '--configuration Release'
      packagesToPack: ''
      configuration: 'Release'
      custom: true
      restoreArguments: '--interactive'
      testRunTitle: ''
      modifyOutputPath: true
      packDirectory: './custom_pack'
      nobuild: true
      includesymbols: true
      includesource: true
      requestTimeout: '180'
      noCache: true
      restoreDirectory: './restoredir'
      verbosityRestore: 'minimal'
      sensitiveAlphanumericInfo1: 'true'
      versioningScheme: '1.0.0'
      versionEnvVar: 'BUILD_VERSION'
      majorVersion: '1'
      minorVersion: '0'
      patchVersion: '3'
      buildProperties: 'CommitId=abc123'
      verbosityPack: 'detailed'
      workingDirectory: './src'

  test:
    needs: build
    uses: kirandevops1993/NUGET-REUSABLE-/.github/workflows/nuget-reusable.yml@main
    with:
      command: test
      projects: '**/*.csproj'
      nugetConfigPath: 'NuGet.config'
      arguments: '--collect "Code coverage"'
      packagesToPack: ''
      configuration: 'Release'
      custom: true
      restoreArguments: '--interactive'
      testRunTitle: 'CI Test Run'
      modifyOutputPath: true
      packDirectory: './custom_pack'
      nobuild: true
      includesymbols: true
      includesource: true
      requestTimeout: '180'
      noCache: true
      restoreDirectory: './restoredir'
      verbosityRestore: 'minimal'
      sensitiveAlphanumericInfo1: 'true'
      versioningScheme: '1.0.0'
      versionEnvVar: 'BUILD_VERSION'
      majorVersion: '1'
      minorVersion: '0'
      patchVersion: '3'
      buildProperties: 'CommitId=abc123'
      verbosityPack: 'detailed'
      workingDirectory: './src'

  pack:
    needs: test
    uses: kirandevops1993/NUGET-REUSABLE-/.github/workflows/nuget-reusable.yml@main
    with:
      command: pack
      projects: ''
      nugetConfigPath: 'NuGet.config'
      arguments: ''
      packagesToPack: '**/*.csproj'
      configuration: 'Release'
      custom: true
      restoreArguments: '--interactive'
      testRunTitle: ''
      modifyOutputPath: true
      packDirectory: './custom_pack'
      nobuild: true
      includesymbols: true
      includesource: true
      requestTimeout: '180'
      noCache: true
      restoreDirectory: './restoredir'
      verbosityRestore: 'minimal'
      sensitiveAlphanumericInfo1: 'true'
      versioningScheme: '1.0.0'
      versionEnvVar: 'BUILD_VERSION'
      majorVersion: '1'
      minorVersion: '0'
      patchVersion: '3'
      buildProperties: 'CommitId=abc123'
      verbosityPack: 'detailed'
      workingDirectory: './src'
Key changes

Replaced the long if/elif/fi block with four separate steps, each gated by if: ${{ inputs.command == '…' }}.

No more fi mismatch—GitHub handles skipping unneeded steps automatically.

Kept each step’s shell as bash so your existing flags/quoting remain valid.

This structure is far more robust and won’t suffer from “unexpected end of file” or missing-fi errors. Let me know how this runs in your repo!







You said:
REUSABLE :

name: Reusable Dotnet Workflow

on:
  workflow_call:
    inputs:
      command:
        required: true
        type: string
      projects:
        required: true
        type: string
      arguments:
        required: false
        type: string
      nugetConfigPath:
        required: true
        type: string
      packagesToPack:
        required: true
        type: string
      configuration:
        required: true
        type: string
      custom:
        required: true
        type: boolean
      restoreArguments:
        required: true
        type: string
      testRunTitle:
        required: false
        type: string
      modifyOutputPath:
        required: true
        type: boolean
      packDirectory:
        required: true
        type: string
      nobuild:
        required: true
        type: boolean
      includesymbols:
        required: true
        type: boolean
      includesource:
        required: true
        type: boolean
      requestTimeout:
        required: false
        type: string
      noCache:
        required: true
        type: boolean
      restoreDirectory:
        required: true
        type: string
      verbosityRestore:
        required: true
        type: string
      sensitiveAlphanumericInfo1:
        required: true
        type: string
      versioningScheme:
        required: false
        type: string
      versionEnvVar:
        required: true
        type: string
      majorVersion:
        required: true
        type: string
      minorVersion:
        required: true
        type: string
      patchVersion:
        required: true
        type: string
      buildProperties:
        required: true
        type: string
      verbosityPack:
        required: true
        type: string
      workingDirectory:
        required: true
        type: string

jobs:
  dotnet:
    runs-on: windows-latest
    defaults:
      run:
        working-directory: ${{ inputs.workingDirectory }}

    env:
      VERSION: ${{ inputs.majorVersion }}.${{ inputs.minorVersion }}.${{ inputs.patchVersion }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.201'

      - name: Set version env var (optional use)
        shell: bash
        run: echo "${{ inputs.versionEnvVar }}=$VERSION" >> $GITHUB_ENV

      - name: Run dotnet ${{ inputs.command }}
        shell: bash
        run: |
          if [[ "${{ inputs.command }}" == "restore" ]]; then
            dotnet restore "${{ inputs.projects }}" \
              --configfile "${{ inputs.nugetConfigPath }}" \
              ${{ inputs.restoreArguments }} \
              --no-cache="${{ inputs.noCache }}" \
              --packages "${{ inputs.restoreDirectory }}" \
              --verbosity "${{ inputs.verbosityRestore }}"

          elif [[ "${{ inputs.command }}" == "build" ]]; then
            dotnet build "${{ inputs.projects }}" ${{ inputs.arguments }}

          elif [[ "${{ inputs.command }}" == "test" ]]; then
            dotnet test "${{ inputs.projects }}" ${{ inputs.arguments }} \
              --logger "trx;LogFileName=${{ inputs.testRunTitle }}.trx"

          elif [[ "${{ inputs.command }}" == "pack" ]]; then
            dotnet pack "${{ inputs.packagesToPack }}" \
              --configuration "${{ inputs.configuration }}" \
              --output "${{ inputs.packDirectory }}" \
              --no-build="${{ inputs.nobuild }}" \
              --include-symbols="${{ inputs.includesymbols }}" \
              --include-source="${{ inputs.includesource }}" \
              --property "Version=$VERSION;SensitiveAlphanumericInfo3=${{ inputs.sensitiveAlphanumericInfo1 }};${{ inputs.buildProperties }}" \
              --verbosity "${{ inputs.verbosityPack }}"
          fi
