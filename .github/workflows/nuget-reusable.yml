name: NuGet Reusable Workflow

on:
  workflow_call:
    inputs:
      # NuGetToolInstaller
      solution: { required: true, type: string }
      nugetConfigPath: { required: true, type: string }
      restoreMode: { required: false, type: string }
      noCache: { required: false, type: boolean }
      nuGetRestoreArgs: { required: false, type: string }
      verbosity: { required: true, type: string }
      nuGetVersion: { required: false, type: string }
      nuGetPath: { required: false, type: string }

      # NuGet Restore
      selectorConfig: { required: false, type: string }
      feed: { required: false, type: string }
      includeNuGetOrg: { required: false, type: boolean }
      packagesDirectory: { required: false, type: string }

      # NuGet Packager
      searchPattern: { required: true, type: string }
      outputdir: { required: true, type: string }
      includeReferencedProjects: { required: false, type: boolean }
      versionByBuild: { required: false, type: boolean }
      versionEnvVar: { required: false, type: string }
      requestedMajorVersion: { required: false, type: string }
      requestedMinorVersion: { required: false, type: string }
      requestedPatchVersion: { required: false, type: string }
      configurationToPack: { required: false, type: string }
      buildProperties: { required: false, type: string }
      nuGetAdditionalArgs: { required: false, type: string }

      # NuGet Publisher
      nuGetFeedType: { required: true, type: string }
      connectedServiceName: { required: true, type: string }
      feedName: { required: true, type: string }
      continueOnEmptyNupkgMatch: { required: false, type: boolean }

jobs:
  nuget-tasks:
    runs-on: windows-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install NuGetTool (NuGetToolInstaller)
        run: |
          echo "Installing NuGet version: ${{ inputs.nuGetVersion }}"
          choco install nuget.commandline -y
          nuget update -self

      - name: NuGet Restore
        run: |
          nuget restore "${{ inputs.solution }}" `
            -ConfigFile "${{ inputs.nugetConfigPath }}" `
            -PackagesDirectory "${{ inputs.packagesDirectory }}" `
            -Verbosity "${{ inputs.verbosity }}" `
            ${{ inputs.noCache && '-NoCache' || '' }} `
            ${{ inputs.nuGetRestoreArgs }}

      - name: NuGet Pack (Packager)
        run: |
          nuget pack "${{ inputs.searchPattern }}" `
            -OutputDirectory "${{ inputs.outputdir }}" `
            ${{ inputs.includeReferencedProjects && '-IncludeReferencedProjects' || '' }} `
            ${{ inputs.versionByBuild && '-VersionByBuild' || '' }} `
            ${{ inputs.versionEnvVar && '-Version "${{ env[inputs.versionEnvVar] }}"' || '' }} `
            -Properties "Configuration=${{ inputs.configurationToPack }};${{ inputs.buildProperties }}" `
            -Verbosity "${{ inputs.verbosity }}" `
            ${{ inputs.nuGetAdditionalArgs }}

      - name: NuGet Push (Publisher)
        run: |
          nuget push "${{ inputs.outputdir }}/*.nupkg" `
            -Source "${{ inputs.feedName }}" `
            -ApiKey "${{ secrets.NUGET_API_KEY }}" `
            -Verbosity "${{ inputs.verbosity }}" `
            ${{ inputs.nuGetAdditionalArgs }} `
            ${{ inputs.continueOnEmptyNupkgMatch && '-SkipDuplicate' || '' }}

            kirandevops1993/NUGET-REUSABLE-/.github/workflows/nuget-reusable.yml@main
